name: SafeDeploy DevSecOps CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest
  STAGING_URL: https://staging.example.com

jobs:

  ################################
  # Pre-Build Stage
  ################################
  prebuild:
    name: Pre-Build Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: SCA - Snyk
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test --severity-threshold=high

      - name: SBOM - CycloneDX
        run: |
          npm install -g @cyclonedx/bom
          cyclonedx-bom -o bom.xml

      - name: SAST - CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: ['javascript']

      - name: SAST - CodeQL Analyze
        uses: github/codeql-action/analyze@v3

      - name: IaC Scan - Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .

  ################################
  # Build Stage
  ################################
  build:
    name: Build Container Image
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker Image
        run: docker push $IMAGE_NAME

  ################################
  # Test Stage
  ################################
  test:
    name: Test & Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Unit Tests
        run: npm test

      - name: Code Coverage
        run: npm run coverage

      - name: Integration Tests
        run: npm run integration

      - name: Image Scan - Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          exit-code: 1
          format: 'table'
          severity: 'HIGH,CRITICAL'

      - name: DAST - OWASP ZAP
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: ${{ env.STAGING_URL }}

  ################################
  # Release Stage
  ################################
  release:
    name: Release and Notify
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: GitOps Trigger (Placeholder)
        run: echo "Trigger ArgoCD/FluxCD here"

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ Deployment pipeline successful for `${{ github.repository }}` on `${{ github.ref_name }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Discord
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "✅ Deployment pipeline successful!"}' \
               ${{ secrets.DISCORD_WEBHOOK }}
