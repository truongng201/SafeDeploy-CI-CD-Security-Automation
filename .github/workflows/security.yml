name: CI/CD & Security Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  static_application_security_testing:
    name: SAST - SonarQube Testing
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: 📥 Checkout Code for Testing
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔍 Run SonarQube Static Testing
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  software_composition_analysis:
    name: SCA - Snyk Testing
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: 📥 Checkout Code for Testing
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 📦 Jump to python app
        run: |
          cd apps/simple-flask
          echo "Current directory: $(pwd)"
          echo "Contents of the directory:"
          ls -la

      - name: 🔍 Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --json-file-output=snyk-results.json

      - name: 💾 Upload Snyk JSON results (for DefectDojo or review)
        uses: actions/upload-artifact@v4
        with:
          name: snyk-json
          path: snyk-results.json

      - name: 📤 Logging snyk results
        run: |
          echo "Snyk results:"
          cat snyk-results.json